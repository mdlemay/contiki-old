CONTIKI_CPU_DIRS += . init/common

CONTIKI_SOURCEFILES += gdt.c helpers.S idt.c cpu.c

CC       = gcc
LD       = gcc
AS       = as
OBJCOPY  = objcopy
SIZE     = size
STRIP    = strip

CFLAGS  += -Wall
LDFLAGS += -Wl,-Map=contiki-$(TARGET).map,--build-id=none

ifeq ($(BUILD_RELEASE),1)
	CFLAGS  += -Os -fno-strict-aliasing
	# Applying this option to the UEFI build may induce an "Invalid operation" error.
	# The UEFI GenFw program strips symbols.
	MULTIBOOT_LDFLAGS += -Wl,--strip-all
else
	ifeq ($(findstring clang,$(CC)),clang)
		CFLAGS  += -O0 -g
	else
		CFLAGS  += -Og -ggdb3
	endif
endif

### UEFI support

UEFI_DIR = $(CONTIKI_CPU)/uefi

ifndef EN_UEFI
# Include a Makefile generated by the build_uefi.sh script, if available.
# If that script was not run, then UEFI support will not be built.
-include $(UEFI_DIR)/Makefile.uefi
endif

ifeq ($(EN_UEFI),1)
	EDK2_DIR = $(UEFI_DIR)/edk2

	GEN_FW = $(EDK2_DIR)/BaseTools/Source/C/bin/GenFw

	CONTIKI_CPU_DIRS += uefi
	CONTIKI_SOURCEFILES += bootstrap_uefi.c
	CFLAGS += -I$(EDK2_DIR)/MdePkg/Include -I$(EDK2_DIR)/MdePkg/Include/Ia32
else
    $(info Note: UEFI support is disabled.)
    ifndef EN_UEFI
        $(info To enable UEFI support, run $(CONTIKI_CPU)/uefi/build_uefi.sh prior)
        $(info to building Contiki.)
    else
        $(info LTO and UEFI support are mututally-exclusive.)
    endif
endif
